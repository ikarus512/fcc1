Developement settings:
 mkdir _tmpdb && start /MIN bin/mongod.exe --dbpath %CD%\_tmpdb
 start bin/mongo.exe 127.0.0.1:27017/dbname   |rem db.users.find({})
NODE_ENV=production
APP_URL=https://localhost:5000
APP_MONGODB_URI=mongodb://localhost:27017/dbname
APP_FACEBOOK_KEY=your-client-id-here            (developers.facebook.com)
APP_FACEBOOK_SECRET=your-client-secret-here
APP_GITHUB_KEY=your-client-id-here
APP_GITHUB_SECRET=your-client-secret-here
APP_TWITTER_KEY=your-client-id-here             (apps.twitter.com,   localhost-->127.0.0.1)
APP_TWITTER_SECRET=your-client-secret-here
APP_GOOGLE_MAPS_API_KEY=                        (console.developers.google.com/apis)



git clone https://github.com/ikarus512/fcc1.git
npm init
npm i -S express body-parser
npm i --save-dev mocha
git add -A && git commit -m "First version" && git push origin master
git log --name-status

 heroku login
heroku create ikarus512-fcc1
//heroku features:enable http-session-affinity        (Apps using Socket.io should enable session affinity: https://devcenter.heroku.com/articles/node-websockets)
heroku config:set APP_URL=https://ikarus512-fcc1.herokuapp.com
heroku config:set APP_MONGODB_URI=mongodb://user:password@mongo.com:port/dbname
heroku config:set APP_FACEBOOK_KEY=your-client-id-here
heroku config:set APP_FACEBOOK_SECRET=your-client-secret-here
heroku config:set APP_GITHUB_KEY=your-client-id-here
heroku config:set APP_GITHUB_SECRET=your-client-secret-here
heroku config:set APP_TWITTER_KEY=your-client-id-here
heroku config:set APP_TWITTER_SECRET=your-client-secret-here
heroku config:set APP_GOOGLE_MAPS_API_KEY=
heroku config:set APP_GOOGLE_PLACES_API_KEY=
heroku config:set APP_GOOGLE_PLACES_API_REFERRER=
git push heroku master
 start heroku logs --tail

https://ikarus512-fcc1.herokuapp.com


Read next:
 PhoneGap Build:
  https://build.phonegap.com
 tests:
  https://github.com/shippableSamples/node-with-parallel-tests-coverage
  http://chaijs.com/api/bdd/#method_ordered
 taco (MS Tools for Apache Cordova, failed to run):
  https://taco.visualstudio.com/en-us/docs/tutorial-gulp-readme/#build
  https://github.com/Microsoft/taco-team-build
 cordova-tasks?:
  https://www.npmjs.com/package/cordova-tasks
 gulp-nodemon to start sever/mongodb
  gulp nodemon browsersync
  https://gist.github.com/Lissy93/1eb7a804b7250d714e02
  https://stackoverflow.com/questions/28665395/using-gulp-to-manage-opening-and-closing-mongodb
 docker
 https://github.com/auth0/angular-jwt
 http://justbuildsomething.com/cordova-and-express-session/
 http://www.kdmooreconsulting.com/blogs/authentication-with-ionic-and-angular-js-in-a-cordovaphonegap-mobile-web-application/
 http://martinmicunda.com/2015/04/14/build-ionic-photo-gallery-app-II/
 https://devdactic.com/restful-api-user-authentication-1/
 http://www.telerik.com/blogs/cross-window-communication-with-cordova's-inappbrowser
 map
  http://leafletjs.com
  http://davidrs.com/wp/phonegap-3-0-leaflet-offline-maps
  imagemagic:
  for f in $(ls */*/*.png);do echo $f ../OSM5/$f; convert $f -quality 90 -strip png8:../OSM5/$f; done


------------------------------------------------
 npm i
 npm i --dev        # recoursive, deprecated?
 npm i --only=dev   # removes production dependencies
------------------------------------------------
ssh-agent:
  https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/
  1. generate key:
    ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
  2. use key:
    eval $(ssh-agent -s); ps
    ssh-add ~/.ssh/id_rsa
    - add key to github account
------------------------------------------------
checkin:
 git fetch origin; git merge --no-edit -m "[ci skip] merge branch 'master' of github.com:ikarus512/fcc1"; git status
 git add -A; git commit -m "[ci skip] cosmetic"; git push origin master
------------------------------------------------
In case of 'npm i' problems:
 npm cache verify && npm i -S gulp-less
 use LTS version of node (currently 6.10.3)
 npm cache verify
 npm cache clean
 npm i -g npm
Should help in case
 ... npm\node_modules\npm\node_modules\ssri\index.js ...
 4551 error Cannot read property 'find' of undefined
------------------------------------------------
After 'npm i':
 before protractor run:
  [11:36:30] E/direct - Error message: Could not find chromedriver at C:\1\projects\js\fcc1\node_modules\protractor\node_modules\webdriver-manager\selenium\chromedriver_2.26.exe. Run 'webdriver-manager update' to download binaries.
  node_modules\.bin\webdriver-manager update
------------------------------------------------
Console debug.
Log $scope:
 $('.ng-app').scope().updateBidForm.price59156f7013780f12845ef8bd.$error;
 $('body').scope();
 (Selector chooses element with ng application ng-app='')
Log service:
 angular.element(document.body).injector().get('serviceName')
 $('.ng-app').injector().get('MyConst');
 $('body').injector().get('MyConst');
------------------------------------------------
Remote debug.
 chrome://inspect
 https://www.raymondcamden.com/2014/04/21/PhoneGap-Developer-App
   cordova plugin add cordova-plugin-crosswalk-webview
 in release version:   cordova plugin remove cordova-plugin-crosswalk-webview
------------------------------------------------
Node app debug:
 npm i -D node-inspector
 node-debug server/index.js
------------------------------------------------
 https://stackoverflow.com/questions/3378501/how-to-browse-localhost-on-android-device
  Connect PC with Phone over USB.
  Turn on Phone's "Developer options" from Settings
  Go to about:inspect URL in PC's browser
  Check "Discover USB Devices" (forward Ports if you are using them in your web-application)
  Copy/paste localhost required link to text field in browser and click Open.
 https://stackoverflow.com/questions/9887621/accessing-localhost-of-pc-from-usb-connected-android-mobile-device
 https://developers.google.com/web/tools/chrome-devtools/remote-debugging/local-server
------------------------------------------------
https://blog.risingstack.com/node-js-security-checklist
https://expressjs.com/en/advanced/best-practice-security.html
 Login Brute Force Protection -- added using express-rate-limit
 headers -- added
 session cookie sequrity -- added
 csrf -- added to web forms (not to CORS-opened REST API)
 xss -- helped by Angular.js automatic encoding (when data inserted into html page)
--------------------------------
SSL/TLS certificate generation instructions
1) Generate cert:
  ### Create self-signed cert for 127.0.0.1:
  openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -sha256 -days 365 -out certificate.pem -subj "/C=RU/ST=RU/L=NNov/O=Company/OU=Org/CN=127.0.0.1"
  ### Review:
  #openssl x509 -text -noout -in certificate.pem
  ### Combine your key and certificate in a PKCS#12 (P12) bundle:
  #openssl pkcs12 -inkey key.pem -in certificate.pem -export -out certificate.p12
  ### Validate your P2 file.
  #openssl pkcs12 -in certificate.p12 -noout -info
2) Put cert/key file to ./_certificate folder (for developement on local server).
------------------------------------------------
CI:
  travis-ci.com
    https://docs.travis-ci.com/user/languages/javascript-with-nodejs/
    E2E/GUI testing: https://docs.travis-ci.com/user/gui-and-headless-browsers/
  coveralls.io
    http://dsernst.com/2015/09/02/node-mocha-travis-istanbul-coveralls-unit-tests-coverage-for-your-open-source-project/
    https://github.com/nickmerwin/node-coveralls
    https://coveralls.zendesk.com/hc/en-us/articles/201769715-Javascript-Node
    Instructions:
    1) sign up to coveralls.io and add your github project
    2) npm i -D coveralls mocha-lcov-reporter
    3) add script to package.json:   "coveralls": "npm run cover -- --report lcovonly && cat ./coverage/lcov.info | coveralls"
    4) add to .travis.yml, will tells Travis to update Coveralls automatically after a successful build:
       after_success:
         - npm run coveralls
    5) commit
    ? https://www.npmjs.com/package/grunt-protractor-coverage
  eslint
    disabling rules in code:
    // eslint-disable-line complexity
    // eslint-disable-next-line complexity
    http://eslint.org/docs/user-guide/configuring.html#configuring-rules
------------------------------------------------
jsDoc (API, REST API, angular apps, publish)
  RestAPI:
    1) apiDoc  http://apidocjs.com  http://sochix.ru/documenting-node-js-rest-api
  angular:
    1) angular-jsdoc
      angular template example (https://www.npmjs.com/package/angular-jsdoc):
      https://rawgit.com/allenhwkim/angularjs-google-maps/master/build/docs/index.html
    2) gulp-ngdocs
      http://www.shristitechlabs.com/adding-automatic-documentation-for-angularjs-apps
      https://github.com/angular/angular.js/wiki/Writing-AngularJS-Documentation
      https://www.npmjs.com/package/gulp-ngdocs
  ? https://doclets.io/
  ? https://www.npmjs.com/package/jsdoc-githubify
  ? https://www.npmjs.com/package/swagger-jsdoc
  https://www.google.ru/search?q=jsdoc+hosting&oq=jsdoc+hosting&aqs=chrome..69i57.11465j0j7&sourceid=chrome&ie=UTF-8
  ? https://www.npmjs.com/package/jsdoc-to-markdown
------------------------------------------------
WISH:
  https://github.com/johnpapa/angular-styleguide
  jsDoc
  add tests for app2,3,4
  test-e2e: fix flaky test, and remove second  npm run test-e2e-cmd1
  codeClimate: reduce duplication
  dev: no minify js/css(less)/html(pug)
  test,prod: minify
  devserver --> runs devmobile (browser) --> mobile tests (android debug/release build only by demand)
  Further reading https://github.com/johnpapa/angular-styleguide:
    controllerAs*,Y080,Y192?(Karma)-Y197,
    ngAnimate
    jsHint file Y230 ?
    Sublime Angular snippets Y250 ?
    Yeoman Generator ?
    Task Automation ?
