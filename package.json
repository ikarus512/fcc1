{
  "name": "fcc1",
  "version": "1.0.0",
  "description": "fcc1 DynApps",
  "keywords": [
    "node",
    "express",
    "cordova",
    "android",
    "angular1",
    "javascript"
  ],
  "main": "server/index.js",
  "scripts": {
    "0000a": "echo ===============================================================================",
    "0000b": "echo === 'npm start' -- is run by heroku.com =======================================",
    "0000c": "echo === 'npm test' -- is run by travis-ci.org =====================================",
    "0000d": "echo === 'npm run coveralls' -- is run by coveralls.io =============================",
    "0000e": "echo ===============================================================================",
    "0000f": "echo =",
    "0000g": "echo =",
    "0000h": "echo =",
    "0010a": "echo ===============================================================================",
    "0010b": "echo === PROD ======================================================================",
    "0010c": "echo ===============================================================================",
    "start": "node server/index.js",
    "0020a": "echo ===============================================================================",
    "0020b": "echo === DEV =======================================================================",
    "0020c": "echo ===============================================================================",
    "build": "gulp",
    "devserver": "cross-env-shell NODE_ENV=test         gulp devserver",
    "devserver:prod": "gulp devserver",
    "0030a": "echo ===============================================================================",
    "0030b": "echo === MOBILE APP, TEST IN BROWSER ===============================================",
    "0030c": "echo ===============================================================================",
    "browser": "gulp mobile-app1-prepare && cd mobile/fcc1apps && cordova run browser --debug",
    "0040a": "echo ===============================================================================",
    "0040b": "echo === MOBILE APP, ANDROID =======================================================",
    "0040c": "echo ===============================================================================",
    "android": "gulp mobile-app1-prepare && cd mobile/fcc1apps && cordova run android --debug",
    "android-r": "gulp mobile-app1-prepare && cd mobile/fcc1apps && cordova run android --release -- --keystore=%keystoreName%.keystore --storePassword=%ANDROID_KEYSTORE_PASSWORD% --alias=%keystoreAlias% --password=%ANDROID_KEYSTORE_PASSWORD% && gulp devserver-binaries-update",
    "android-u": "gulp devserver-binaries-update",
    "0050a": "echo ===============================================================================",
    "0050b": "echo === SYNTAX CHECK ==============================================================",
    "0050c": "echo ===============================================================================",
    "linters": "npm run lint && npm run jscs && npm run lint:pug",
    "lint": "jshint .",
    "jscs": "gulp jscs",
    "disabled jscs": "jscs . ### Deprecated. Will be replaced by jslint.",
    "lint:pug": "pug-lint .",
    "0060a": "echo ===============================================================================",
    "0060b": "echo === TESTS =====================================================================",
    "0060c": "echo ===============================================================================",
    "test": "npm run linters && npm run test-int && npm run test-e2e && npm run ver",
    "ver": "npm run ver1 && npm run ver2 && npm run ver3",
    "ver1": "node --version && npm --version",
    "ver2": "npm outdated -g || echo ...ignoring fail of 'npm outdated -g'",
    "ver3": "npm outdated || echo ...ignoring fail of 'npm outdated'",
    "0070a": "echo ===============================================================================",
    "0070b": "echo === END-TO-END TESTS ==========================================================",
    "0070c": "echo ===============================================================================",
    "test-e2e": "webdriver-manager update && cross-env-shell NODE_ENV=test PORT_HTTP=8000 NODE_TLS_REJECT_UNAUTHORIZED=0    npm run test-e2e-cmd",
    "test-e2e-cmd": "npm run test-e2e-cmd-rerun || npm run test-e2e-cmd-rerun || npm run test-e2e-cmd-rerun",
    "test-e2e-cmd-rerun": "protractor test/e2e/protractor-conf.js",
    "disabled pretest-e2e-cmd": "npm run stop && start /MIN node server/index.js && node server/wait.js",
    "disabled posttest-e2e-cmd": "npm run stop",
    "0080a": "echo ===============================================================================",
    "0080b": "echo === INTEGRATION TESTS =========================================================",
    "0080c": "echo ===============================================================================",
    "test-int": "cross-env-shell NODE_ENV=test PORT_HTTP=8000 NODE_TLS_REJECT_UNAUTHORIZED=0    npm run test-int-cmd",
    "test-int-cmd": "mocha test/integr/**/*.js --reporter dot --timeout 15000",
    "test-int:debug": "node-debug _mocha test/integr/**/*.js --reporter dot --timeout 150000",
    "0090a": "echo ===============================================================================",
    "0090b": "echo === INTEGRATION TESTS, CODE COVERAGE ==========================================",
    "0090c": "echo ===============================================================================",
    "test-int-cov": "cross-env-shell NODE_ENV=test PORT_HTTP=8000 NODE_TLS_REJECT_UNAUTHORIZED=0    npm run test-int-cov-cmd",
    "test-int-cov-cmd": "istanbul cover ./node_modules/mocha/bin/_mocha -- test/integr/**/*.js --reporter dot --timeout 15000",
    "cover": "npm run test-int-cov",
    "coveralls": "npm run cover -- --report lcovonly && cat ./coverage/lcov.info | coveralls",
    "0100a": "echo ===============================================================================",
    "0100b": "echo === UNIT TESTS ================================================================",
    "0100c": "echo ===============================================================================",
    "test-uni": "karma start ./test/unit/karma.conf.js --single-run",
    "0110a": "echo ===============================================================================",
    "0110b": "echo === AUX =======================================================================",
    "0110c": "echo ===============================================================================",
    "stop": "node server/stop.js",
    "0120a": "echo ===============================================================================",
    "0120b": "echo === DOC =======================================================================",
    "0120c": "echo ===============================================================================",
    "doc": "npm run doc:api && npm run doc:main",
    "doc:api": "npm run doc:api:1 && npm run doc:api:2 && npm run doc:api:3 && npm run doc:api:4",
    "doc:api:1": "apidoc -i ./server/routes/app1 -o ./doc_output/REST_API/HTML/app1/ && apidoc -i ./server/routes/app2 -o ./doc_output/REST_API/HTML/app2/ && apidoc -i ./server/routes/app3 -o ./doc_output/REST_API/HTML/app3/ && apidoc -i ./server/routes/app4 -o ./doc_output/REST_API/HTML/app4/ && apidoc -i ./server/routes/app5 -o ./doc_output/REST_API/HTML/app5/",
    "doc:api:2": "mkdirp ./doc_output/REST_API/MD",
    "doc:api:3": "copyfiles ./doc/tutorials/*.md ./doc_output/REST_API/MD/",
    "doc:api:4": "apidoc-markdown2 -p ./doc_output/REST_API/HTML/app1/ -o ./doc_output/REST_API/MD/REST_API_app1.md && apidoc-markdown2 -p ./doc_output/REST_API/HTML/app2/ -o ./doc_output/REST_API/MD/REST_API_app2.md && apidoc-markdown2 -p ./doc_output/REST_API/HTML/app3/ -o ./doc_output/REST_API/MD/REST_API_app3.md && apidoc-markdown2 -p ./doc_output/REST_API/HTML/app4/ -o ./doc_output/REST_API/MD/REST_API_app4.md && apidoc-markdown2 -p ./doc_output/REST_API/HTML/app5/ -o ./doc_output/REST_API/MD/REST_API_app5.md",
    "doc:main": "jsdoc -d ./doc_output/main -c .jsdoc.conf.json -t ./node_modules/ink-docstrap/template -R README.md -u ./doc_output/REST_API/MD -r ./server -r ./src"
  },
  "apidoc": {
    "name": "DynApps REST API",
    "version": "0.1.0",
    "description": "DynApps REST API",
    "title": "fcc1 DynApps REST API",
    "url": "https://ikarus512-fcc1.herokuapp.com"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ikarus512/fcc1.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/ikarus512/fcc1/issues"
  },
  "homepage": "https://github.com/ikarus512/fcc1#readme",
  "dependencies": {
    "angular": "^1.6.5",
    "angular-animate": "^1.6.5",
    "angular-chart.js": "^1.1.1",
    "angular-messages": "^1.6.5",
    "angular-route": "^1.6.5",
    "bcrypt-nodejs": "0.0.3",
    "bluebird": "^3.5.0",
    "body-parser": "^1.17.1",
    "bootstrap": "^3.3.7",
    "chart.js": "^2.6.0",
    "connect-flash": "^0.1.1",
    "connect-mongo": "^1.3.2",
    "cookie-parser": "^1.4.3",
    "csurf": "^1.9.0",
    "d3": "^4.10.0",
    "express": "^4.15.2",
    "express-less": "^0.1.0",
    "express-rate-limit": "^2.8.0",
    "express-session": "^1.15.4",
    "express-status-monitor": "^1.0.0",
    "extend": "^3.0.0",
    "font-awesome": "^4.7.0",
    "helmet": "^3.8.0",
    "jimp": "^0.2.27",
    "jquery": "^3.2.1",
    "leaflet": "^1.1.0",
    "material-design-icons-iconfont": "^3.0.3",
    "mongoose": "^4.11.4",
    "morgan": "^1.8.1",
    "multer": "^1.3.0",
    "ng-file-upload": "^12.2.13",
    "passport": "^0.3.2",
    "passport-facebook": "^2.1.1",
    "passport-github": "^1.1.0",
    "passport-local": "^1.0.0",
    "passport-twitter": "^1.0.4",
    "pug": "^2.0.0-beta11",
    "request": "^2.81.0",
    "rotating-file-stream": "^1.2.1",
    "socket.io": "^2.0.3",
    "tc-angular-chartjs": "^2.1.4",
    "ws": "^3.0.0"
  },
  "devDependencies": {
    "apidoc": "^0.17.6",
    "apidoc-markdown2": "^0.3.4",
    "browser-sync": "^2.18.13",
    "chai": "^4.1.0",
    "chai-as-promised": "^7.1.1",
    "cheerio": "^1.0.0-rc.2",
    "copyfiles": "^1.2.0",
    "coveralls": "^2.13.1",
    "cross-env": "^5.0.1",
    "event-stream": "^3.3.4",
    "expect.js": "^0.3.1",
    "gulp": "^3.9.1",
    "gulp-changed": "^3.1.0",
    "gulp-clean-css": "^3.7.0",
    "gulp-copy": "^1.0.0",
    "gulp-csslint": "^1.0.0",
    "gulp-debug": "^3.1.0",
    "gulp-headerfooter": "^1.0.3",
    "gulp-htmlmin": "^3.0.0",
    "gulp-jscs": "^4.0.0",
    "gulp-jshint": "^2.0.4",
    "gulp-less": "^3.3.2",
    "gulp-nodemon": "^2.2.1",
    "gulp-pug": "^3.3.0",
    "gulp-rename": "^1.2.2",
    "gulp-uglify": "^3.0.0",
    "gulp-util": "^3.0.8",
    "ink-docstrap": "^1.3.0",
    "istanbul": "^0.4.5",
    "jq2": "^1.0.1",
    "jsdoc": "^3.5.4",
    "jshint": "^2.9.5",
    "jshint-stylish": "^2.2.1",
    "karma": "^1.6.0",
    "karma-chrome-launcher": "^2.2.0",
    "karma-cli": "^1.0.1",
    "karma-ie-launcher": "^1.0.0",
    "karma-mocha": "^1.3.0",
    "karma-phantomjs-launcher": "^1.0.4",
    "karma-requirejs": "^1.1.0",
    "mkdirp": "^0.5.1",
    "mkdirs": "0.0.2",
    "mocha": "^3.2.0",
    "mocha-lcov-reporter": "^1.3.0",
    "mocha.parallel": "^0.15.0",
    "mockgoose": "^7.0.7",
    "mongodb": "^2.2.30",
    "node-inspector": "^1.1.1",
    "protractor": "^5.1.2",
    "pug-lint": "^2.4.0",
    "requirejs": "^2.3.4",
    "superagent": "^3.5.2"
  }
}
